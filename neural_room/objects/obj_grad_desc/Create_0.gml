/// @description  –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–π —Å–ø—É—Å–∫ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π –ø–µ—Ä—Å–æ–Ω—ã
//https://realpython.com/gradient-descent-algorithm-python/#basic-gradient-descent-algorithm
//https://www.youtube.com/watch?v=mRjuV3WmMRQ&t=1s
//https://www.youtube.com/watch?v=mRjuV3WmMRQ&list=PLMDIx4RI54PaQPcGIXbhELYmPVW-oVBxy&index=4

//–≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–π —Å–ø—É—Å–∫ –Ω—É–∂–µ–Ω –¥–ª—è –º–∏–Ω–∏–º–∏–∑–∞—Ü–∏–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ—Ç–µ—Ä—å. 
//–°—É—Ç—å –∞–ª–≥–æ—Ä–∏—Ç–º–∞ ‚Äì –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∏–º–µ–Ω—å—à–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –æ—à–∏–±–∫–∏. 
//–ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ —ç—Ç–æ –º–æ–∂–Ω–æ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∫–∞–∫ —Å–ø—É—Å–∫ –≤–æ –≤–ø–∞–¥–∏–Ω—É –≤ –ø–æ–ø—ã—Ç–∫–µ –Ω–∞–π—Ç–∏ –∑–æ–ª–æ—Ç–æ –Ω–∞ –¥–Ω–µ —É—â–µ–ª—å—è (—Å–∞–º–æ–µ –Ω–∏–∑–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –æ—à–∏–±–∫–∏).

//–≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–π —Å–ø—É—Å–∫ –¥–ª—è –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏–µ –º–∏–Ω–∏–º—É–º–∞
function gradient_descent(start, learn_rate, n_iter)
{
	static gradient = function(p)//—Ñ—É–Ω–∫—Ü–∏—è (–º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∞ –Ω–µ –ø—Ä–æ–≥—Ä–∞–º–∏—Ä–∞–º–Ω–∞—è)
	{
		return p*2
	}
	
	var vector=start;
    for (var i=0;i<n_iter;i++)
	{
        diff = -learn_rate * gradient(vector)//(vector*2)//  –ø—Ä–∏–º–µ—Ä –∏ –Ω–∞–π–¥–µ—Ç–µ –º–∏–Ω–∏–º—É–º —Ñ—É–Ω–∫—Ü–∏–∏ ùê∂ = ùë£2  —ç—Ç–æ (vector*2).
        vector += diff
	}
    return vector
}



// –°–ª–æ–∂–Ω—ã–π –ù–æ —Ä–∞–±–æ—á–∏–π –ø—Ä–∏–º–µ—Ä (–≥—Ä–∞–¥–∏–µ–Ω—Ç –∑–∞–º–µ—á–∞–µ—Ç —è–º—É –Ω–∞ –≥—Ä–∞—Ñ–∏–∫–µ) —Ñ—É–Ω–∫—Ü–∏—è 4 * power(x,3) - 10 * x - 3
n_iter2=50
start2=0
//—á—Ç–æ–±—ã –ø—Ä–æ–¥–µ–º–æ—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å
//–ø–æ—á–µ–º—É –ø—Ä—è–º–∞—è –ª–∏–Ω–∏—è , –¥–∞ –ø–æ—Ç–æ–º—É —á—Ç–æ —è —Ä–∏—Å—É—é –∫—Ä—É–≥–∏, –∏ —Ä–µ—à–∏–ª –µ–±–∞–Ω—É—Ç—å x –∏ y –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏ —É –Ω–∏—Ö
function gradient_descent_draw2(start, learn_rate, n_iter)
{
	static gradient = function(p)//–º–∏–∫—Ä–æ—Ñ—É–Ω–∫—Ü–∏—è , –ø—Ä–æ—Å—Ç–æ –∫–æ—Ç–æ—Ä–∞—è —É–º–Ω–æ–∂–∞–µ—Ç –Ω–∞ 2
	{
		return 4 * power(p,3) - 10 * p - 3//–≤–æ—Ç —ç—Ç–æ —Å–ª–æ–∂–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è //p*2 - –ø—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è
	}
	var vector=start;
    for (var i=0;i<n_iter;i++)
	{
        diff = -learn_rate * gradient(vector)//(vector*2)//  –ø—Ä–∏–º–µ—Ä –∏ –Ω–∞–π–¥–µ—Ç–µ –º–∏–Ω–∏–º—É–º —Ñ—É–Ω–∫—Ü–∏–∏ ùê∂ = ùë£2  —ç—Ç–æ (vector*2).
        vector += diff
		if vector>0
		{
			draw_set_color(c_white)
			draw_circle(x+300-vector*30+160,y+100-gradient(vector),2,true) //—É–º–Ω–æ–∂–µ–Ω–∏–µ —Ä–µ–≥—É–ª–∏—Ä—É–π —ç—Ç–æ —á—Ç–æ–±—ã –ª—É—á—à–µ –≤–∏–¥–µ—Ç—å –≥—Ä–∞—Ñ–∏–∫
		}
		else
		{
			draw_set_color(c_red)
			draw_circle(x+300-vector*30+160,y+100+gradient(vector),2,true)	//—É–º–Ω–æ–∂–µ–Ω–∏–µ —Ä–µ–≥—É–ª–∏—Ä—É–π —ç—Ç–æ —á—Ç–æ–±—ã –ª—É—á—à–µ –≤–∏–¥–µ—Ç—å –≥—Ä–∞—Ñ–∏–∫
		}
	}
    return vector
}






////////////////–ø—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è x*2
n_iter=50
learn_rate=0.1
start=100
function gradient_descent_draw(start, learn_rate, n_iter)
{
	static gradient = function(p)//–º–∏–∫—Ä–æ—Ñ—É–Ω–∫—Ü–∏—è , –ø—Ä–æ—Å—Ç–æ –∫–æ—Ç–æ—Ä–∞—è —É–º–Ω–æ–∂–∞–µ—Ç –Ω–∞ 2
	{
		return p*2 //- –ø—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è
	}
	
	var vector=start;
    for (var i=0;i<n_iter;i++)
	{
        diff = -learn_rate * gradient(vector)//(vector*2)//  –ø—Ä–∏–º–µ—Ä –∏ –Ω–∞–π–¥–µ—Ç–µ –º–∏–Ω–∏–º—É–º —Ñ—É–Ω–∫—Ü–∏–∏ ùê∂ = ùë£2  —ç—Ç–æ (vector*2).
        vector += diff
		if vector>0
		{
			draw_set_color(c_white)
			draw_circle(x+100-vector+160,y+100-gradient(vector),2,true) 
		}
		else
		{
			draw_set_color(c_red)
			draw_circle(x+100-vector+160,y+100+gradient(vector),2,true)	
		}
		

	}
    return vector
}
show=gradient_descent_draw(start,learn_rate,n_iter)


/////////////////////3 –ø—Ä–∏–º–µ—Ä –Ω–∞ –ø—Ä–æ—Å—Ç—É—é –Ω–µ–π—Ä–æ–Ω–Ω—É—é —Å–µ—Ç—å
input=4
weight=0.4
win=12.6//–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –¥–ª—è out
learn_rat=0.1
var error=0//–æ–±—ä—è–≤–∏–ª –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
var gradient=0//–æ–±—ä—è–≤–∏–ª –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
for (var i=0;i<10;i++)
{
	out=input*weight//–∏–º–∏—Ç–∞—Ü–∏—è 1 –Ω–µ–π—Ä–æ–Ω–∞ (–≤—Ö–æ–¥*–º–∞—Å—Å—É)
	delta=out-win//–ß–ò–°–õ–ê–Ø –û–®–ò–ë–ö–ê -—Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –∏ –≤—ã—Ö–æ–¥–Ω—ã–º —Å–ª–æ–µ–º , —Å–ª—É–∂–∏—Ç –∫–∞–∫ –≤–µ–ª–∏—á–∏–Ω–∞ –¥–ª—è –∫–∞—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏ –≤—Ö–æ–¥. –∑–Ω–∞—á–µ–Ω–∏–π
	weight_delta=delta*input//—Å–ª—É–∂–∏—Ç –¥–ª—è –æ—Ü–µ–Ω–∫–∏ –≤–µ–ª–∏—á–∏–Ω—ã –∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–µ—Å–∞, –±–æ–ª—å—à—É—é –∏–ª–∏ –º–µ–Ω—å—à—É—é —Å—Ç–æ—Ä–æ–Ω—É -44
	weight+=-weight_delta*learn_rat//–±–µ—Ä—ë–º —á–∞—Å—Ç—å –æ—Ç –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –¥–µ–ª–∞–µ–º –ø–æ–ø—Ä–∞–≤–∫—É –≤–µ—Å–æ–≤ —Ç—É–¥–∞
	
}
//show_message("error "+string(error) + " weight " + string(weight)+ " out " + string(out))

